name: Go Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送带有版本号的 tag（例如 v1.0.0）时触发工作流
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [ linux, windows ] # 指定要构建的操作系统
        goarch: [ amd64 ]         # 指定架构

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # 选择 Go 版本
      - name: install gcc zip
        run: sudo apt-get install gcc-mingw-w64-x86-64 zip -y

      - name: tidy
        run: go mod tidy
      - name: swag
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g cmd/apimain.go --output docs/api --instanceName api --exclude http/controller/admin
          swag init -g cmd/apimain.go --output docs/admin --instanceName admin --exclude http/controller/api

      - name: Build for ${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          mkdir release -p
          cp -ar resources release/
          cp -ar docs release/
          cp -ar conf release/
          mkdir -p release/data
          mkdir -p release/runtime
          if [ "${{ matrix.goos }}" = "windows" ]; then
            CC=x86_64-w64-mingw32-gcc GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=1 go build -o ./release/apimain.exe ./cmd/apimain.go
            cd release 
            zip -r ../${{ matrix.goos}}-${{ matrix.goarch }}.zip .
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=1 go build -ldflags "-s -w" -o ./release/apimain ./cmd/apimain.go
            tar -czf ${{ matrix.goos}}-${{ matrix.goarch }}.tar.gz -C ./release .
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ${{ matrix.goos}}-${{ matrix.goarch }}.tar.gz
            ${{ matrix.goos}}-${{ matrix.goarch }}.zip
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.goos}}-${{ matrix.goarch }}.tar.gz
            ${{ matrix.goos}}-${{ matrix.goarch }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}